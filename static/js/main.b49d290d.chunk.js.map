{"version":3,"sources":["models/index.ts","components/Header.tsx","data/data.ts","store.ts","data/ajax.ts","components/RecipeCategories.tsx","components/RecipeTypes.tsx","components/Recepes.tsx","components/Search.tsx","components/FilterSummary.tsx","App.tsx","index.tsx"],"names":["Category","RecipeType","className","href","width","height","xmlns","d","fillRule","categories","Object","values","types","recepies","name","desc","Cozy","Dinner","Fast","Lunch","Healthy","Breakfast","Vegan","selectedCategoriesState","atom","key","default","selectedTypesState","recipeSearchState","recipeCategoriesQuery","selector","get","Promise","resolve","setTimeout","data","recipeTypesQuery","recipesQuery","filteredRecipesState","a","selectedCategories","selectedTypes","search","recipes","filter","recipe","length","some","cat","includes","hasCategory","hasType","toLowerCase","indexOf","hasName","useRecoilValue","useRecoilState","setSelectedCategories","map","category","isSelected","onClick","c","updateSelectedCategory","classnames","receipeTypes","setSelectedTypes","type","updateSelectedType","Reviews","join","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","recipeSearch","setRecipeSearch","placeholder","value","onChange","e","target","setSearch","anyFilterActive","slice","sort","Header","FilterSummary","Search","fallback","RecipeCategories","RecipeTypes","Recepes","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.b49d290d.chunk.js","sourcesContent":["export enum Category {\n    Cozy = \"Cozy\", Fast = \"Fast\", Healthy = \"Healthy\", Vegan = \"Vegan\"\n}\n\nexport enum RecipeType {\n    Breakfast = \"Breakfast\", Dinner = \"Dinner\", Lunch = \"Lunch\"\n}\n\nexport type Recipe = {\n    name: string,\n    desc: string,\n    categories: Category[],\n    types: RecipeType[],\n}\n\nexport type RecipeFilter = {\n    selectedCategories: Category[],\n    selectedTypes: RecipeType[],\n    search: string\n}\n\n","import React from \"react\";\n\nexport default () => (\n  <header className=\"text-gray-700 body-font\">\n    <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n      <a\n        href=\"/recoil-foodtalk-demo\"\n        className=\"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0\"\n      >\n        <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M3.9468 10.0288L20.5548.995c2.4433-1.3267 5.45-1.3267 7.8936 0l16.6078 9.0338C47.4966 11.3585 49 13.8102 49 16.4666V34.534c0 2.6537-1.5034 5.1082-3.9438 6.438l-16.6078 9.0307c-2.4435 1.3297-5.4503 1.3297-7.8937 0L3.9467 40.972C1.5035 39.642 0 37.1876 0 34.534V16.4667c0-2.6564 1.5034-5.108 3.9468-6.4378z\"\n            fillRule=\"evenodd\"\n          ></path>\n        </svg>\n        <span className=\"ml-3 text-xl\">Foodtalk</span>\n      </a>\n      <nav className=\"md:mr-auto md:ml-4 md:py-1 md:pl-4 md:border-l md:border-gray-400\tflex flex-wrap items-center text-base justify-center\">\n        <button className=\"mr-5 hover:text-gray-900 cursor-pointer\">\n          Recipes\n        </button>\n      </nav>\n      <a href=\"https://github.com/emilmork/recoil-foodtalk-demo\">Github</a>\n    </div>\n  </header>\n);\n","import { Category, RecipeType } from \"../models\";\n\nexport default {\n  categories: Object.values(Category),\n  types: Object.values(RecipeType),\n  recepies: [\n    {\n      name: \"Pancakes\",\n      desc: \"Fast to make, fast to eat\",\n      categories: [Category.Cozy],\n      types: [RecipeType.Dinner],\n    },\n    {\n      name: \"Chicken tikka\",\n      desc: \"Juicy and tasty\",\n      categories: [Category.Fast],\n      types: [RecipeType.Dinner],\n    },\n    {\n      name: \"Hamburger\",\n      desc: \"To the whole family\",\n      categories: [Category.Fast, Category.Cozy],\n      types: [RecipeType.Lunch],\n    },\n    {\n      name: \"Omelett\",\n      desc: \"To the whole family\",\n      categories: [Category.Fast, Category.Healthy],\n      types: [RecipeType.Breakfast],\n    },\n    {\n      name: \"Creamy pasta\",\n      desc: \"Proper evening food\",\n      categories: [Category.Cozy],\n      types: [RecipeType.Dinner],\n    },\n    {\n      name: \"Fish & ships\",\n      desc: \"When you are out of time\",\n      categories: [Category.Fast],\n      types: [RecipeType.Dinner, RecipeType.Lunch],\n    },\n    {\n      name: \"Fish soup\",\n      desc: \"Perfect for the date\",\n      categories: [Category.Fast],\n      types: [RecipeType.Dinner, RecipeType.Lunch],\n    },\n    {\n      name: \"Crayfish\",\n      desc: \"Perfect for the date\",\n      categories: [Category.Cozy, Category.Healthy],\n      types: [RecipeType.Dinner, RecipeType.Lunch],\n    },\n    {\n      name: \"Crumble\",\n      desc: \"Enjoy all year\",\n      categories: [Category.Cozy],\n      types: [RecipeType.Dinner, RecipeType.Lunch],\n    },\n    {\n      name: \"Baked potato\",\n      desc: \"Perfect your spud technique then pile our filling ideas high.\",\n      categories: [Category.Fast, Category.Cozy],\n      types: [RecipeType.Dinner],\n    },\n    {\n      name: \"Lasagna\",\n      desc: \"The perfect italian lasagna!\",\n      categories: [Category.Healthy, Category.Vegan],\n      types: [RecipeType.Dinner]\n    }\n  ],\n}\n","import { fetchRecipes, fetchFoodCategories, fetchFoodTypes } from \"./data/ajax\";\nimport { Category, Recipe, RecipeType, RecipeFilter } from './models';\n\nimport { atom, selector } from \"recoil\";\n\n// Local state\nexport const selectedCategoriesState = atom<Category[]>({\n  key: \"selectedCategores\",\n  default: [],\n});\n\nexport const selectedTypesState = atom<RecipeType[]>({\n  key: \"selectedTypes\",\n  default: [],\n});\n\nexport const recipeSearchState = atom<string>({\n  key: \"search\",\n  default: \"\",\n});\n\n// Queries\nexport const recipeCategoriesQuery = selector<Category[]>({\n  key: \"categoriesQuery\",\n  get: () => fetchFoodCategories(),\n});\n\nexport const recipeTypesQuery = selector<RecipeType[]>({\n  key: \"typeQuery\",\n  get: () => fetchFoodTypes(),\n});\n\nconst recipesQuery = selector<Recipe[]>({\n  key: \"recipesQuery\",\n  get: () => fetchRecipes(),\n});\n\n// Derived state\nexport const filterSummary = selector<RecipeFilter>({\n  key: \"filterSummary\",\n  get: async ({ get }) => {\n    return {\n      selectedCategories: get(selectedCategoriesState),\n      selectedTypes: get(selectedTypesState),\n      search: get(recipeSearchState),\n    };\n  },\n});\nexport const filteredRecipesState = selector<Recipe[]>({\n  key: \"filteredRecepies\",\n  get: ({ get }) => {\n    const recipes = get(recipesQuery);\n\n    const selectedCategories = get(selectedCategoriesState);\n    const selectedTypes = get(selectedTypesState);\n    const search = get(recipeSearchState);\n\n    return recipes.filter((recipe) => {\n      return (\n        hasCategory(recipe, selectedCategories) &&\n        hasType(recipe, selectedTypes) &&\n        hasName(recipe, search)\n      );\n    });\n  },\n});\n\n// Utils\nfunction hasCategory(recipe: Recipe, selectedCategories: Category[]): boolean {\n  if (selectedCategories.length === 0) return true;\n\n  return selectedCategories.some((cat) => recipe.categories.includes(cat));\n}\n\nfunction hasType(recipe: Recipe, selectedTypes: RecipeType[]): boolean {\n  if (selectedTypes.length === 0) return true;\n\n  return selectedTypes.some((cat) => recipe.types.includes(cat));\n}\n\nfunction hasName(recipe: Recipe, search: string): boolean {\n  if (search === \"\") return true;\n\n  return recipe.name.toLowerCase().indexOf(search.toLowerCase()) >= 0;\n}\n","import data from \"./data\";\nimport { Category, Recipe, RecipeType } from '../models';\n\n// API placeholder\nexport const fetchFoodCategories = () =>\n  new Promise<Category[]>((resolve) => {\n    setTimeout(() => {\n      resolve(data.categories);\n    }, 1500);\n  });\n\nexport const fetchFoodTypes = () =>\n  new Promise<RecipeType[]>((resolve) => {\n    setTimeout(() => {\n      resolve(data.types);\n    }, 2000);\n  });\n\nexport const fetchRecipes = () =>\n  new Promise<Recipe[]>((resolve) => {\n    setTimeout(() => {\n      resolve(data.recepies);\n    }, 3000);\n  });\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport { recipeCategoriesQuery, selectedCategoriesState } from \"../store\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { Category } from \"../models\";\n\nexport default () => {\n  const categories = useRecoilValue(recipeCategoriesQuery);\n  const [selectedCategories, setSelectedCategories] = useRecoilState(\n    selectedCategoriesState\n  );\n\n  const updateSelectedCategory = (category: Category) => {\n    if (selectedCategories.includes(category)) {\n      setSelectedCategories(selectedCategories.filter((c) => c !== category));\n    } else {\n      setSelectedCategories([category, ...selectedCategories]);\n    }\n  };\n\n  return (\n    <nav className=\"list-none -mb-1\">\n      {categories.map((category: Category) => {\n        const isSelected = selectedCategories.includes(category);\n        return (\n          <li key={category} onClick={() => updateSelectedCategory(category)}>\n            <label\n              className={classnames(\n                \"text-gray-600 hover:text-gray-800 cursor-pointer\",\n                {\n                  \"text-green-600\": isSelected,\n                  \"hover:text-green-800\": isSelected,\n                }\n              )}\n            >\n              {category}\n            </label>\n          </li>\n        );\n      })}\n    </nav>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport { recipeTypesQuery, selectedTypesState } from \"../store\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { RecipeType } from \"../models\";\n\nexport default () => {\n  const receipeTypes = useRecoilValue(recipeTypesQuery);\n  const [selectedTypes, setSelectedTypes] = useRecoilState(selectedTypesState);\n\n  const updateSelectedType = (type: RecipeType) => {\n    if (selectedTypes.includes(type)) {\n      setSelectedTypes(selectedTypes.filter((c) => c !== type));\n    } else {\n      setSelectedTypes([type, ...selectedTypes]);\n    }\n  };\n  return (\n    <nav className=\"list-none -mb-1\">\n      {receipeTypes.map((type) => {\n        const isSelected = selectedTypes.includes(type);\n\n        return (\n          <li key={type} onClick={() => updateSelectedType(type)}>\n            <label\n              className={classnames(\n                \"text-gray-600 hover:text-gray-800 cursor-pointer\",\n                {\n                  \"text-green-600\": isSelected,\n                  \"hover:text-green-800\": isSelected,\n                }\n              )}\n            >\n              {type}\n            </label>\n          </li>\n        );\n      })}\n    </nav>\n  );\n};\n","import React from \"react\";\n\nimport { filteredRecipesState } from \"../store\";\nimport { useRecoilValue } from \"recoil\";\n\nexport default () => {\n  const recipes = useRecoilValue(filteredRecipesState);\n\n  return (\n    <div className=\"flex flex-wrap\">\n      {recipes.map((recipe) => (\n        <div key={recipe.name} className=\"md:w-1/2 cursor-pointer\">\n          <div className=\"border-2 border-gray-200 m-2 p-4\">\n            <h2 className=\"text-lg sm:text-xl text-gray-900 font-medium title-font mb-2\">\n              {recipe.name}\n            </h2>\n            <Reviews />\n            <p className=\"leading-relaxed text-base mb-4\">{recipe.desc}</p>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-yellow-800\">\n                {recipe.categories.join(\", \")}\n              </span>\n              <span className=\"text-sm text-indigo-800\">\n                {recipe.types.join(\", \")}\n              </span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nfunction Reviews() {\n  return (\n    <div className=\"flex mb-4\">\n      <span className=\"flex items-center\">\n        <svg\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n        <svg\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n        <svg\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n        <svg\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n        <svg\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { recipeSearchState } from \"../store\";\nimport { useRecoilState } from \"recoil\";\n\nexport default () => {\n  const [recipeSearch, setRecipeSearch] = useRecoilState(recipeSearchState);\n\n  return (\n    <div className=\"px-2\">\n      <input\n        className=\"bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-sm py-2 px-4 block w-full appearance-none leading-normal\"\n        type=\"email\"\n        placeholder=\"Search for recipe..\"\n        value={recipeSearch}\n        onChange={(e) => {\n          setRecipeSearch(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport {\n  selectedCategoriesState,\n  selectedTypesState,\n  recipeSearchState,\n} from \"../store\";\nimport { useRecoilState } from \"recoil\";\n\nexport default () => {\n  const [selectedCategories, setSelectedCategories] = useRecoilState(\n    selectedCategoriesState\n  );\n  const [selectedTypes, setSelectedTypes] = useRecoilState(selectedTypesState);\n  const [search, setSearch] = useRecoilState(recipeSearchState);\n\n  const anyFilterActive =\n    selectedCategories.length > 0 ||\n    selectedTypes.length > 0 ||\n    search.length > 0;\n\n  const clearFilter = () => {\n    setSelectedCategories([]);\n    setSelectedTypes([]);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"flex w-full h-6\">\n      {selectedCategories.length > 0 && (\n        <div className=\"mr-4\">\n          <span className=\"text-xs text-bold text-green-600\">CATEGORIES </span>\n          <span className=\"text-sm text-green-800 mr-2\">\n            {selectedCategories.slice().sort().join(\", \")}\n          </span>\n        </div>\n      )}\n      {selectedTypes.length > 0 && (\n        <div className=\"mr-4\">\n          <span className=\"text-xs text-bold text-green-600\">TYPES </span>\n          <span className=\"text-sm text-green-800 mr-2\">\n            {selectedTypes.slice().sort().join(\", \")}\n          </span>\n        </div>\n      )}\n      {search.length > 0 && (\n        <div className=\"mr-4\">\n          <span className=\"text-xs text-bold text-green-600\">SEARCH </span>\n          <span className=\"text-sm text-green-800 mr-2\">{search}</span>\n        </div>\n      )}\n      {anyFilterActive && (\n        <button\n          onClick={clearFilter}\n          className=\"inline-flex items-center bg-gray-200 border-0 py-1 px-3 focus:outline-none hover:bg-gray-300 rounded text-base mt-4 md:mt-0\"\n        >\n          clear filter\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { Suspense } from \"react\";\nimport Header from \"./components/Header\";\nimport RecipeCategories from \"./components/RecipeCategories\";\nimport RecipeTypes from \"./components/RecipeTypes\";\nimport Recepes from \"./components/Recepes\";\nimport Search from \"./components/Search\";\nimport FilterSummary from \"./components/FilterSummary\";\n\nexport default () => {\n  return (\n    <div className=\"text-gray-700 body-font\">\n      <Header />\n      <div className=\"px-5 py-12 mx-auto flex flex-col\">\n        <div className=\"lg:w-4/6 mx-auto\">\n          <FilterSummary />\n\n          <div className=\"flex flex-col sm:flex-row mt-10\">\n            <div>\n              <Search />\n              <div className=\"text-center sm:pr-8 sm:py-8\">\n                <h2 className=\"title-font font-medium text-gray-800 tracking-widest text-sm mb-3\">\n                  CATEGORY\n                </h2>\n                <Suspense fallback={<span>...</span>}>\n                  <RecipeCategories />\n                </Suspense>\n              </div>\n              <div className=\"text-center sm:pr-8 sm:py-8\">\n                <h2 className=\"title-font font-medium text-gray-800 tracking-widest text-sm mb-3\">\n                  TYPE\n                </h2>\n                <Suspense fallback={<span>...</span>}>\n                  <RecipeTypes />\n                </Suspense>\n              </div>\n            </div>\n            <div className=\"sm:w-2/3 sm:pl-8 sm:border-l border-gray-300 sm:border-t-0 border-t\">\n              <Suspense\n                fallback={\n                  <div className=\"text-center py-6\">Loading recipes...</div>\n                }\n              >\n                <Recepes />\n              </Suspense>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.generated.css\";\n\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}