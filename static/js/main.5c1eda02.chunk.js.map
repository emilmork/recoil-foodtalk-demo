{"version":3,"sources":["components/Header.js","data/data.js","store.js","data/ajax.js","components/RecipeCategories.js","components/RecipeTypes.js","components/Recepes.js","components/Search.js","components/FilterSummary.js","App.js","index.js"],"names":["className","href","width","height","xmlns","d","fillRule","name","desc","categories","types","selectedCategoriesState","atom","key","default","selectedTypesState","recipeSearchState","recipeCategoriesQuery","selector","get","Promise","resolve","setTimeout","data","recipeTypesQuery","recipesQuery","filteredRecipesState","recipes","selectedCategories","selectedTypes","search","filter","recipe","length","some","cat","includes","hasCategory","hasType","toLowerCase","indexOf","hasName","useRecoilValue","useRecoilState","setSelectedCategories","map","category","isSelected","onClick","c","updateSelectedCategory","classnames","receipeTypes","setSelectedTypes","type","updateSelectedType","Reviews","join","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","recipeSearch","setRecipeSearch","placeholder","value","onChange","e","target","setSearch","anyFilterActive","slice","sort","Header","FilterSummary","Search","fallback","RecipeCategories","RecipeTypes","Recepes","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.5c1eda02.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default () => (\n  <header className=\"text-gray-700 body-font\">\n    <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n      <a\n        href=\"/recoil-foodtalk-demo\"\n        className=\"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0\"\n      >\n        <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M3.9468 10.0288L20.5548.995c2.4433-1.3267 5.45-1.3267 7.8936 0l16.6078 9.0338C47.4966 11.3585 49 13.8102 49 16.4666V34.534c0 2.6537-1.5034 5.1082-3.9438 6.438l-16.6078 9.0307c-2.4435 1.3297-5.4503 1.3297-7.8937 0L3.9467 40.972C1.5035 39.642 0 37.1876 0 34.534V16.4667c0-2.6564 1.5034-5.108 3.9468-6.4378z\"\n            fillRule=\"evenodd\"\n          ></path>\n        </svg>\n        <span className=\"ml-3 text-xl\">Foodtalk</span>\n      </a>\n      <nav className=\"md:mr-auto md:ml-4 md:py-1 md:pl-4 md:border-l md:border-gray-400\tflex flex-wrap items-center text-base justify-center\">\n        <button className=\"mr-5 hover:text-gray-900 cursor-pointer\">\n          Recipes\n        </button>\n      </nav>\n      <a href=\"https://github.com/emilmork/recoil-foodtalk-demo\">Github</a>\n    </div>\n  </header>\n);\n","export default {\n  categories: [\"Cozy\", \"Fast\", \"Healthy\"],\n  types: [\"Breakfast\", \"Lunch\", \"Dinner\"],\n  recepies: [\n    {\n      name: \"Pancakes\",\n      desc: \"Fast to make, fast to eat\",\n      categories: [\"Cozy\"],\n      types: [\"Dinner\"],\n    },\n    {\n      name: \"Chicken tikka\",\n      desc: \"Juicy and tasty\",\n      categories: [\"Fast\"],\n      types: [\"Dinner\"],\n    },\n    {\n      name: \"Hamburger\",\n      desc: \"To the whole family\",\n      categories: [\"Fast\", \"Cozy\"],\n      types: [\"Lunsj\"],\n    },\n    {\n      name: \"Omelett\",\n      desc: \"To the whole family\",\n      categories: [\"Fast\", \"Healthy\"],\n      types: [\"Breakfast\"],\n    },\n    {\n      name: \"Creamy pasta\",\n      desc: \"Proper evening food\",\n      categories: [\"Cozy\"],\n      types: [\"Dinner\"],\n    },\n    {\n      name: \"Fish & ships\",\n      desc: \"When you are out of time\",\n      categories: [\"Fast\"],\n      types: [\"Dinner\", \"Lunch\"],\n    },\n    {\n      name: \"Fish soup\",\n      desc: \"Perfect for the date\",\n      categories: [\"Fast\"],\n      types: [\"Dinner\", \"Lunch\"],\n    },\n    {\n      name: \"Crayfish\",\n      desc: \"Perfect for the date\",\n      categories: [\"Cozy\", \"Healthy\"],\n      types: [\"Dinner\", \"Lunch\"],\n    },\n    {\n      name: \"Crumble\",\n      desc: \"Enjoy all year\",\n      categories: [\"Cozy\"],\n      types: [\"Dinner\", \"Lunch\"],\n    },\n    {\n      name: \"Baked potato\",\n      desc: \"Perfect your spud technique then pile our filling ideas high.\",\n      categories: [\"Fast\", \"Cozy\"],\n      types: [\"Dinner\"],\n    },\n  ],\n};\n","import { fetchRecipes, fetchFoodCategories, fetchFoodTypes } from \"./data/ajax\";\n\nimport { atom, selector } from \"recoil\";\n\n// Local state\nexport const selectedCategoriesState = atom({\n  key: \"selectedCategores\",\n  default: [],\n});\n\nexport const selectedTypesState = atom({\n  key: \"selectedTypes\",\n  default: [],\n});\n\nexport const recipeSearchState = atom({\n  key: \"search\",\n  default: \"\",\n});\n\n// Queries\nexport const recipeCategoriesQuery = selector({\n  key: \"categoriesQuery\",\n  default: [],\n  get: () => fetchFoodCategories(),\n});\n\nexport const recipeTypesQuery = selector({\n  key: \"typeQuery\",\n  default: [],\n  get: () => fetchFoodTypes(),\n});\n\nconst recipesQuery = selector({\n  key: \"recipesQuery\",\n  get: () => fetchRecipes(),\n});\n\n// Derived state\nexport const filteredRecipesState = selector({\n  key: \"filteredRecepies\",\n  get: ({ get }) => {\n    const recipes = get(recipesQuery);\n\n    const selectedCategories = get(selectedCategoriesState);\n    const selectedTypes = get(selectedTypesState);\n    const search = get(recipeSearchState);\n\n    return recipes.filter((recipe) => {\n      return (\n        hasCategory(recipe, selectedCategories) &&\n        hasType(recipe, selectedTypes) &&\n        hasName(recipe, search)\n      );\n    });\n  },\n});\n\n// Utils\nfunction hasCategory(recipe, selectedCategories) {\n  if (selectedCategories.length === 0) return true;\n\n  return selectedCategories.some((cat) => recipe.categories.includes(cat));\n}\n\nfunction hasType(recipe, selectedTypes) {\n  if (selectedTypes.length === 0) return true;\n\n  return selectedTypes.some((cat) => recipe.types.includes(cat));\n}\n\nfunction hasName(recipe, search) {\n  if (search === \"\") return true;\n\n  return recipe.name.toLowerCase().indexOf(search.toLowerCase()) >= 0;\n}\n","import data from \"./data\";\n\n// API placeholder\nexport const fetchFoodCategories = () =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(data.categories);\n    }, 1500);\n  });\n\nexport const fetchFoodTypes = () =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(data.types);\n    }, 2000);\n  });\n\nexport const fetchRecipes = () =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(data.recepies);\n    }, 3000);\n  });\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport { recipeCategoriesQuery, selectedCategoriesState } from \"../store\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\n\nexport default () => {\n  const categories = useRecoilValue(recipeCategoriesQuery);\n  const [selectedCategories, setSelectedCategories] = useRecoilState(\n    selectedCategoriesState\n  );\n\n  const updateSelectedCategory = (category) => {\n    if (selectedCategories.includes(category)) {\n      setSelectedCategories(selectedCategories.filter((c) => c !== category));\n    } else {\n      setSelectedCategories([category, ...selectedCategories]);\n    }\n  };\n\n  return (\n    <nav className=\"list-none -mb-1\">\n      {categories.map((category) => {\n        const isSelected = selectedCategories.includes(category);\n        return (\n          <li key={category} onClick={() => updateSelectedCategory(category)}>\n            <label\n              className={classnames(\n                \"text-gray-600 hover:text-gray-800 cursor-pointer\",\n                {\n                  \"text-green-600\": isSelected,\n                  \"hover:text-green-800\": isSelected,\n                }\n              )}\n            >\n              {category}\n            </label>\n          </li>\n        );\n      })}\n    </nav>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport { recipeTypesQuery, selectedTypesState } from \"../store\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\n\nexport default () => {\n  const receipeTypes = useRecoilValue(recipeTypesQuery);\n  const [selectedTypes, setSelectedTypes] = useRecoilState(selectedTypesState);\n\n  const updateSelectedType = (type) => {\n    if (selectedTypes.includes(type)) {\n      setSelectedTypes(selectedTypes.filter((c) => c !== type));\n    } else {\n      setSelectedTypes([type, ...selectedTypes]);\n    }\n  };\n  return (\n    <nav className=\"list-none -mb-1\">\n      {receipeTypes.map((type) => {\n        const isSelected = selectedTypes.includes(type);\n\n        return (\n          <li key={type} onClick={() => updateSelectedType(type)}>\n            <label\n              className={classnames(\n                \"text-gray-600 hover:text-gray-800 cursor-pointer\",\n                {\n                  \"text-green-600\": isSelected,\n                  \"hover:text-green-800\": isSelected,\n                }\n              )}\n            >\n              {type}\n            </label>\n          </li>\n        );\n      })}\n    </nav>\n  );\n};\n","import React from \"react\";\n\nimport { filteredRecipesState } from \"../store\";\nimport { useRecoilValue } from \"recoil\";\n\nexport default () => {\n  const recipes = useRecoilValue(filteredRecipesState);\n\n  return (\n    <div className=\"flex flex-wrap\">\n      {recipes.map((recipe) => (\n        <div key={recipe.name} className=\"md:w-1/2 cursor-pointer\">\n          <div className=\"border-2 border-gray-200 m-2 p-4\">\n            <h2 className=\"text-lg sm:text-xl text-gray-900 font-medium title-font mb-2\">\n              {recipe.name}\n            </h2>\n            <Reviews />\n            <p className=\"leading-relaxed text-base mb-4\">{recipe.desc}</p>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-yellow-800\">\n                {recipe.categories.join(\", \")}\n              </span>\n              <span className=\"text-sm text-indigo-800\">\n                {recipe.types.join(\", \")}\n              </span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nfunction Reviews() {\n  return (\n    <div className=\"flex mb-4\">\n      <span className=\"flex items-center\">\n        <svg\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n        <svg\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n        <svg\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n        <svg\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n        <svg\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          className=\"w-4 h-4 text-green-500\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n        </svg>\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { recipeSearchState } from \"../store\";\nimport { useRecoilState } from \"recoil\";\n\nexport default () => {\n  const [recipeSearch, setRecipeSearch] = useRecoilState(recipeSearchState);\n\n  return (\n    <div className=\"px-2\">\n      <input\n        className=\"bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-sm py-2 px-4 block w-full appearance-none leading-normal\"\n        type=\"email\"\n        placeholder=\"Search for recipe..\"\n        value={recipeSearch}\n        onChange={(e) => {\n          setRecipeSearch(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport {\n  selectedCategoriesState,\n  selectedTypesState,\n  recipeSearchState,\n} from \"../store\";\nimport { useRecoilState } from \"recoil\";\n\nexport default () => {\n  const [selectedCategories, setSelectedCategories] = useRecoilState(\n    selectedCategoriesState\n  );\n  const [selectedTypes, setSelectedTypes] = useRecoilState(selectedTypesState);\n  const [search, setSearch] = useRecoilState(recipeSearchState);\n\n  const anyFilterActive =\n    selectedCategories.length > 0 ||\n    selectedTypes.length > 0 ||\n    search.length > 0;\n\n  const clearFilter = () => {\n    setSelectedCategories([]);\n    setSelectedTypes([]);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"flex w-full h-6\">\n      {selectedCategories.length > 0 && (\n        <div className=\"mr-4\">\n          <span className=\"text-xs text-bold text-green-600\">CATEGORIES </span>\n          <span className=\"text-sm text-green-800 mr-2\">\n            {selectedCategories.slice().sort().join(\", \")}\n          </span>\n        </div>\n      )}\n      {selectedTypes.length > 0 && (\n        <div className=\"mr-4\">\n          <span className=\"text-xs text-bold text-green-600\">TYPES </span>\n          <span className=\"text-sm text-green-800 mr-2\">\n            {selectedTypes.slice().sort().join(\", \")}\n          </span>\n        </div>\n      )}\n      {search.length > 0 && (\n        <div className=\"mr-4\">\n          <span className=\"text-xs text-bold text-green-600\">SEARCH </span>\n          <span className=\"text-sm text-green-800 mr-2\">{search}</span>\n        </div>\n      )}\n      {anyFilterActive && (\n        <button\n          onClick={clearFilter}\n          className=\"inline-flex items-center bg-gray-200 border-0 py-1 px-3 focus:outline-none hover:bg-gray-300 rounded text-base mt-4 md:mt-0\"\n        >\n          clear filter\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { Suspense } from \"react\";\nimport Header from \"./components/Header\";\nimport RecipeCategories from \"./components/RecipeCategories\";\nimport RecipeTypes from \"./components/RecipeTypes\";\nimport Recepes from \"./components/Recepes\";\nimport Search from \"./components/Search\";\nimport FilterSummary from \"./components/FilterSummary\";\n\nexport default () => {\n  return (\n    <div className=\"text-gray-700 body-font\">\n      <Header />\n      <div className=\"px-5 py-12 mx-auto flex flex-col\">\n        <div className=\"lg:w-4/6 mx-auto\">\n          <FilterSummary />\n\n          <div className=\"flex flex-col sm:flex-row mt-10\">\n            <div>\n              <Search />\n              <div className=\"text-center sm:pr-8 sm:py-8\">\n                <h2 className=\"title-font font-medium text-gray-800 tracking-widest text-sm mb-3\">\n                  CATEGORY\n                </h2>\n                <Suspense fallback={<span>...</span>}>\n                  <RecipeCategories />\n                </Suspense>\n              </div>\n              <div className=\"text-center sm:pr-8 sm:py-8\">\n                <h2 className=\"title-font font-medium text-gray-800 tracking-widest text-sm mb-3\">\n                  TYPE\n                </h2>\n                <Suspense fallback={<span>...</span>}>\n                  <RecipeTypes />\n                </Suspense>\n              </div>\n            </div>\n            <div className=\"sm:w-2/3 sm:pl-8 sm:border-l border-gray-300 sm:border-t-0 border-t\">\n              <Suspense\n                fallback={\n                  <div className=\"text-center py-6\">Loading recipes...</div>\n                }\n              >\n                <Recepes />\n              </Suspense>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.generated.css\";\n\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}